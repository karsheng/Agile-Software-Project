{"version":3,"sources":["base.js","components/FullLoading.jsx","Auth.js","components/Copyright.jsx","components/Logo.jsx","constants.js","pages/Login.jsx","pages/SignUp.jsx","PrivateRoute.js","pages/Page404.jsx","components/ProductGrid.jsx","components/SectionTitle.jsx","components/LayoutTitle.jsx","components/listItems.jsx","components/AppBar.jsx","components/Drawer.jsx","components/Layout.jsx","pages/CryptoList.jsx","components/DateSelector.jsx","components/MessageBar.jsx","components/Metrics.jsx","components/ProductLogo.jsx","utils/renderCellExpand.js","components/TopTweets.jsx","components/Modal.jsx","config.jsx","components/TwitterSection.jsx","components/NewsTable.jsx","components/NewsSection.jsx","components/Product.jsx","pages/CryptoDashboard.jsx","pages/StockList.jsx","pages/StockDashboard.jsx","pages/Home.jsx","pages/ForgetPassword.jsx","pages/WatchList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FullLoading","react_default","a","createElement","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","item","xs","CircularProgress","size","AuthContext","React","createContext","AuthProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","pending","setPending","useEffect","auth","onAuthStateChanged","user","components_FullLoading","Provider","value","Copyright","props","Typography","assign","variant","color","align","Link","Date","getFullYear","Logo","width","padding","react_router_dom","to","alt","src","cryptoList","btc","fullName","disabled","eth","bnb","ada","xrp","sol","doge","dot","shib","stockList","aapl","goog","msft","ba","ibm","theme","createTheme","withRouter","history","handleLogin","useCallback","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_event$target$element","email","password","wrap","_context","prev","next","preventDefault","target","elements","signInWithEmailAndPassword","push","t0","alert","stop","_x","apply","this","arguments","useContext","react_router","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","components_Logo","Avatar","m","bgcolor","LockOutlined_default","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","mb","href","components_Copyright","handleSignUp","SignUp_regeneratorRuntime","createUserWithEmailAndPassword","then","_ref3","uid","database","ref","set","wishlist","error","catch","PrivateRoute","RouteComponent","rest","objectWithoutProperties","render","routeProps","page404","react","GlobalStyles","styles","ul","listStyle","disableGutters","pt","pb","gutterBottom","borderTop","concat","palette","divider","py","ProductGrid","productList","productType","showAll","Set","selected","setSelected","db","products","keys","once","snapshot","data","val","split","handleOnChange","e","checked","temp","add","delete","newSelected","Array","from","join","map","product","has","key","sm","md","Card","height","CardMedia","p","image","CardContent","flexGrow","toUpperCase","CardActions","Switch","onChange","renderProducts","SectionTitle","typoComponent","noWrap","LayoutTitle","text","mainListItems","ListItemButton","ListItemIcon","Visibility_default","ListItemText","primary","ShowChart_default","MonetizationOn_default","secondaryListItems","onClick","signOut","Logout_default","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","objectSpread","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","& .MuiDrawer-paper","position","whiteSpace","boxSizing","defineProperty","overflowX","breakpoints","up","mdTheme","Layout","title","setOpen","_React$useState","_React$useState2","anchorEl","setAnchorEl","popoverOpen","Boolean","undefined","toggleDrawer","components_AppBar","Toolbar","pr","IconButton","edge","aria-label","marginRight","Menu_default","Fragment","aria-describedby","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","components_Drawer","px","ChevronLeft_default","Divider","List","my","backgroundColor","mode","grey","overflow","CryptoList","components_Layout","components_LayoutTitle","components_SectionTitle","components_ProductGrid","DateSelector","setValue","maxDate","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","disableFuture","minDate","newValue","renderInput","params","MessageBar","message","handleClose","reason","action","Close_default","fontSize","Snackbar","autoHideDuration","Metrics","percentage","icon","arrowIcon","mr","ProductLogo","productName","GridCellExpand","wrapper","cellDiv","cellValue","_React$useState3","_React$useState4","showFullCell","setShowFullCell","_React$useState5","_React$useState6","showPopper","setShowPopper","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","onMouseEnter","element","isCurrentlyOverflown","current","scrollHeight","clientHeight","scrollWidth","clientWidth","onMouseLeave","lineHeight","top","textOverflow","Popper","Paper","elevation","offsetHeight","renderCellExpand","renderCellExpand_GridCellExpand","colDef","computedWidth","columns","field","flex","headerName","renderCell","TopTweets","rows","DataGrid","pageSize","rowsPerPageOptions","left","transform","border","boxShadow","GuideModal","HelpOutlined_default","Modal","aria-labelledby","modalInfo","productCard","dataSelector","keyMetrics","priceAndSentiment","tweeterSection","negativeTweet","positiveTweet","newsSection","TwitterSection","sentimentData","fromDate","toDate","sentimentLoading","layout","getTopTweets","followers","d","followersSorted","slice","sort","b","reverse","x","i","findIndex","y","polarity","Stack","Twitter_default","components_Modal","components_ProductLogo","substring","react_plotly_default","useResizeHandler","l","r","t","pad","autosize","lg","ThumbDown_default","components_TopTweets","length","ThumbUp_default","sentiment","Chip","Link_default","NewsTable","onCellClick","defaultMuiPrevented","row","window","NewsSection","publishers","filteredData","setFilteredData","updateData","publisher","fd","indices","forEach","customdata","filter","includes","hovertext","marker","filterPublisher","Newspaper_default","Autocomplete","disablePortal","options","toConsumableArray","minWidth","defaultValue","components_NewsTable","counter","link","date","getTableContent","Product","metrics","setMetrics","metricsLoading","setMetricsLoading","_useState5","_useState6","priceData","setPriceData","_useState7","_useState8","priceLoading","setPriceLoading","_useState9","_useState10","setSentimentData","_useState11","_useState12","setSentimentLoading","_useState13","_useState14","filteredSentimentData","setFilteredSentimentData","_useState15","_useState16","newsData","setNewsData","_useState17","_useState18","newsLoading","setNewsLoading","_useState19","_useState20","filteredNewsData","setFilteredNewsData","_useState21","_useState22","setPublishers","setHours","_useState23","toISOString","_useState24","endDate","setEndDate","setMonth","getMonth","_useState25","_useState26","startDate","setStartDate","_useState27","_useState28","setFromDate","_useState29","_useState30","setToDate","setDate","getDate","_useState31","_useState32","messageBarOpen","setMessageBarOpen","_useState33","_useState34","setMessage","useParams","getSplicedData","td","idx","findLastIndex","getData","getIdToken","token","headers","authorization","start","end","startString","endString","fetch","res","json","dates","finally","fig","metricsProps","currentValue","parseFloat","ArrowUpward_default","ArrowDownward_default","sentimentCategory","Analytics_default","components_Metrics","prices","AttachMoney_default","tweets","news","onRelayout","xaxis","range","components_TwitterSection","components_NewsSection","components_MessageBar","CryptoDashboard","components_Product","StockList","StockDashboard","Home","borderBottom","flexWrap","mx","setError","errorMessage","setErrorMessage","showSuccess","setShowSuccess","handleForgetPassword","ForgetPassword_regeneratorRuntime","sendPasswordResetEmail","helperText","WatchList","App","Auth_AuthProvider","src_PrivateRoute","exact","path","Login","ForgetPassword","SignUp","Page404","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.17fc5925.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default app;\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { Grid } from \"@mui/material\";\n\nconst FullLoading = () => {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={3}>\n        <CircularProgress size={100} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FullLoading;\n","import React, { useEffect, useState } from \"react\";\nimport app from \"./base.js\";\nimport FullLoading from \"./components/FullLoading\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <FullLoading />\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\">Money Mood</Link> {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport default Copyright;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = ({ width }) => {\n  return (\n    <Grid\n      container\n      spacing={1}\n      padding={1}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Link to=\"/\">\n        <img alt=\"Logo\" width={width} src=\"/logo.png\" />\n      </Link>\n    </Grid>\n  );\n};\n\nexport default Logo;\n","export const drawerWidth = 240;\nexport const MINDAYS = 7;\nexport const REDIRECT = \"/watchlist\";\nexport const cryptoList = {\n  btc: { fullName: \"Bitcoin\", disabled: false },\n  eth: { fullName: \"Ethereum\", disabled: false },\n  bnb: { fullName: \"Binance\", disabled: false },\n  ada: { fullName: \"Cardano\", disabled: false },\n  xrp: { fullName: \"XRP\", disabled: false },\n  sol: { fullName: \"Solana\", disabled: false },\n  doge: { fullName: \"Dogecoin\", disabled: false },\n  dot: { fullName: \"Polkadot\", disabled: true },\n  shib: { fullName: \"Shiba Inu\", disabled: false },\n};\nexport const stockList = {\n  aapl: { fullName: \"Apple\", disabled: false },\n  goog: { fullName: \"Google\", disabled: false },\n  msft: { fullName: \"Microsoft\", disabled: false },\n  ba: { fullName: \"Boeing\", disabled: false },\n  ibm: { fullName: \"IBM\", disabled: false },\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport app from \"../base.js\";\nimport { AuthContext } from \"../Auth.js\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Copyright from \"../components/Copyright\";\nimport Logo from \"../components/Logo\";\nimport { REDIRECT } from \"../constants.js\";\n\nconst theme = createTheme();\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async (event) => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(REDIRECT);\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to={REDIRECT} />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Logo width=\"100%\" />\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleLogin}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/forget\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\nimport app from \"../base\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Copyright from \"../components/Copyright\";\nimport Logo from \"../components/Logo\";\nimport { REDIRECT } from \"../constants\";\n\nconst theme = createTheme();\n\nconst SignUp = ({ history }) => {\n  const handleSignUp = useCallback(\n    async (event) => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value)\n        .then(({ user }) => {\n          const { uid } = user;\n          app\n            .database()\n            .ref(\"users/\" + uid)\n            .set(\n              {\n                email: email.value,\n                wishlist: {},\n              },\n              (error) => {\n                if (error) {\n                  // The write failed...\n                  alert(error);\n                } else {\n                  // Data saved successfully!\n                  history.push(REDIRECT);\n                }\n              }\n            );\n        })\n        .catch((error) => {\n          alert(error);\n        });\n    },\n    [history]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Logo width=\"100%\" />\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSignUp}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default withRouter(SignUp);\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute;\n","import * as React from 'react';\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\nimport Container from \"@mui/material/Container\";\nimport Copyright from \"../components/Copyright\";\nimport Logo from \"../components/Logo\";\n\nconst page404 = () => {\n  return (\n    <React.Fragment>\n      <GlobalStyles\n        styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\n      />\n      <CssBaseline />\n      {/* Hero unit */}\n      <Container\n        disableGutters\n        maxWidth=\"sm\"\n        component=\"main\"\n        sx={{ pt: 8, pb: 6 }}\n      >\n        <Logo width=\"100%\" />\n        <br />\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n        >\n          Page Not Found!!\n        </Typography>\n        <div\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          <img src=\"/imgs/error.jpeg\" alt=\"Error 404 icon\"/>\n        </div>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container padding={1} alignItems=\"center\" justifyContent=\"center\">\n          <h3>\n            <a href=\"/\">Go back to home</a>\n          </h3>\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default page404;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Switch from \"@mui/material/Switch\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth.js\";\nimport app from \"../base\";\n\nconst ProductGrid = ({ productList, productType, showAll }) => {\n  const { currentUser } = useContext(AuthContext);\n  const [selected, setSelected] = useState(new Set());\n  const { uid } = currentUser;\n  const db = app.database();\n  const products = Object.keys(productList);\n  const ref = db.ref(`users/${uid}/${productType}`);\n\n  useEffect(() => {\n    ref.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        setSelected(new Set(data.split(\",\")));\n      }\n    });\n  }, []);\n\n  const handleOnChange = (e, checked) => {\n    const { id } = e.target;\n    const temp = new Set(selected);\n    checked ? temp.add(id) : temp.delete(id);\n    const newSelected = Array.from(temp).join(\",\");\n    ref.set(newSelected);\n    setSelected(temp);\n  };\n\n  const renderNoProducts = () => {\n    return (\n      <Grid item>\n        <Typography sx={{ p: 2 }}>\n          No products available. Go to{\" \"}\n          <a href={`/${productType}`}>{`${productType}`}</a> page to add to wish\n          list.\n        </Typography>\n      </Grid>\n    );\n  };\n\n  const renderProducts = (products) => {\n    return products.map((product) => (\n      <Grid\n        sx={{ display: selected.has(product) || showAll ? \"block\" : \"none\" }}\n        item\n        key={product}\n        xs={12}\n        sm={6}\n        md={3}\n      >\n        <Card\n          sx={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <CardMedia\n            component=\"img\"\n            sx={{\n              // 16:9\n              p: 7,\n            }}\n            image={`/${productType}/${product}.png`}\n            alt=\"random\"\n          />\n          <CardContent sx={{ flexGrow: 1 }}>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\n              {`${productList[product].fullName} - ${product.toUpperCase()}`}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ p: 2 }}>\n            Add to Watchlist\n            <Switch\n              checked={selected.has(product)}\n              id={product}\n              onChange={handleOnChange}\n              size=\"big\"\n              disabled={productList[product].disabled}\n            />\n            <Button\n              disabled={productList[product].disabled}\n              component={Link}\n              to={`/${productType}/${product}`}\n            >\n              View\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    ));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {selected.size > 0 || showAll\n        ? renderProducts(products)\n        : renderNoProducts()}\n    </Grid>\n  );\n};\n\nexport default ProductGrid;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst SectionTitle = ({ children, typoComponent, variant }) => {\n  return (\n    <Typography\n      component={typoComponent}\n      variant={variant}\n      color=\"inherit\"\n      noWrap\n      sx={{ flexGrow: 1, p: 1, mt: 2 }}\n    >\n      {children}\n    </Typography>\n  );\n};\n\nexport default SectionTitle;\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nconst LayoutTitle = ({ text }) => {\n  return (\n    <Typography\n      component=\"h1\"\n      variant=\"h6\"\n      color=\"inherit\"\n      noWrap\n      sx={{ flexGrow: 1 }}\n    >\n      {text}\n    </Typography>\n  );\n};\n\nexport default LayoutTitle;\n","import * as React from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\nimport ShowChartIcon from \"@mui/icons-material/ShowChart\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport app from \"../base.js\";\nimport { Link } from \"react-router-dom\";\n\nexport const mainListItems = (\n  <React.Fragment>\n    <ListItemButton component={Link} to=\"/watchlist\">\n      <ListItemIcon>\n        <VisibilityIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Watch List\" />\n    </ListItemButton>\n    <ListItemButton component={Link} to=\"/stocks\">\n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Stocks\" />\n    </ListItemButton>\n    <ListItemButton component={Link} to=\"/cryptos\">\n      <ListItemIcon>\n        <MonetizationOnIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Crytocurrencies\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n\nexport const secondaryListItems = (\n  <React.Fragment>\n    <ListItemButton onClick={() => app.auth().signOut()}>\n      <ListItemIcon>\n        <LogoutIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Logout\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n","import MuiAppBar from \"@mui/material/AppBar\";\nimport { styled } from \"@mui/material/styles\";\nimport { drawerWidth } from \"../constants\";\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nexport default AppBar;\n","import { styled } from \"@mui/material/styles\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport { drawerWidth } from \"../constants\";\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\nexport default Drawer;\n","import React, { useState, useContext } from \"react\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport AppBar from \"./AppBar\";\nimport Drawer from \"./Drawer\";\nimport Copyright from \"./Copyright\";\nimport { AuthContext } from \"../Auth.js\";\nimport Button from \"@mui/material/Button\";\nimport Popover from \"@mui/material/Popover\";\nimport app from \"../base.js\";\n\nconst mdTheme = createTheme();\n\nconst Layout = ({ title, children }) => {\n  const [open, setOpen] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const popoverOpen = Boolean(anchorEl);\n  const id = popoverOpen ? \"email-popover\" : undefined;\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            {title}\n            {currentUser ? (\n              <>\n                <Button\n                  aria-describedby={id}\n                  variant=\"inherit\"\n                  onClick={handleClick}\n                >\n                  {currentUser.email}\n                </Button>\n                <Popover\n                  id={id}\n                  open={popoverOpen}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  <Button onClick={() => app.auth().signOut()}>Logout</Button>\n                </Popover>\n              </>\n            ) : (\n              \"\"\n            )}\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            {mainListItems}\n            <Divider sx={{ my: 1 }} />\n            {secondaryListItems}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            {children}\n            <Copyright sx={{ pt: 4 }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { cryptoList } from \"../constants\";\nimport ProductGrid from \"../components/ProductGrid\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport LayoutTitle from \"../components/LayoutTitle\";\nimport Layout from \"../components/Layout\";\n\nconst CryptoList = () => {\n  return (\n    <Layout title={<LayoutTitle text=\"Cryptocurrencies\" />}>\n      <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n        <div>CryptoCurrencies</div>\n      </SectionTitle>\n      <ProductGrid\n        productType=\"cryptos\"\n        productList={cryptoList}\n        showAll={true}\n      />\n    </Layout>\n  );\n};\n\nexport default CryptoList;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\n\nexport default function DateSelector({ value, setValue, label, maxDate }) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        inputFormat=\"dd-MMM-yyyy\"\n        label={label}\n        value={value}\n        disableFuture={true}\n        minDate={new Date(2021, 0, 0)}\n        maxDate={maxDate ? maxDate : null}\n        onChange={(newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst MessageBar = ({ message, open, setOpen }) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        Close\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      message={message}\n      action={action}\n    />\n  );\n};\n\nexport default MessageBar;\n","import React from \"react\";\nimport { Box, Card, CardContent, Grid, Typography } from \"@mui/material\";\n\nconst Metrics = ({ title, value, percentage, icon, arrowIcon }) => {\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n          <Grid item>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\n              {title}\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h4\">\n              {value}\n            </Typography>\n          </Grid>\n          <Grid item>{icon}</Grid>\n        </Grid>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n            pt: 2,\n          }}\n        >\n          {arrowIcon}\n          <Typography\n            variant=\"body2\"\n            sx={{\n              mr: 1,\n            }}\n          >\n            {`${percentage} %`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"caption\">\n            Since last week\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Metrics;\n","import React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ProductLogo = ({ size, productName, product, productType }) => {\n  return (\n    <Avatar\n      sx={{ width: size, height: size }}\n      alt={productName}\n      src={`/${productType}/${product}.png`}\n    />\n  );\n};\n\nexport default ProductLogo;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\n\nfunction isOverflown(element) {\n  return (\n    element.scrollHeight > element.clientHeight ||\n    element.scrollWidth > element.clientWidth\n  );\n}\n\nconst GridCellExpand = React.memo(function GridCellExpand(props) {\n  const { width, value } = props;\n  const wrapper = React.useRef(null);\n  const cellDiv = React.useRef(null);\n  const cellValue = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [showFullCell, setShowFullCell] = React.useState(false);\n  const [showPopper, setShowPopper] = React.useState(false);\n\n  const handleMouseEnter = () => {\n    const isCurrentlyOverflown = isOverflown(cellValue.current);\n    setShowPopper(isCurrentlyOverflown);\n    setAnchorEl(cellDiv.current);\n    setShowFullCell(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowFullCell(false);\n  };\n\n  React.useEffect(() => {\n    if (!showFullCell) {\n      return undefined;\n    }\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        setShowFullCell(false);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setShowFullCell, showFullCell]);\n\n  return (\n    <Box\n      ref={wrapper}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      sx={{\n        alignItems: 'center',\n        lineHeight: '24px',\n        width: 1,\n        height: 1,\n        position: 'relative',\n        display: 'flex',\n      }}\n    >\n      <Box\n        ref={cellDiv}\n        sx={{\n          height: 1,\n          width,\n          display: 'block',\n          position: 'absolute',\n          top: 0,\n        }}\n      />\n      <Box\n        ref={cellValue}\n        sx={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n      >\n        {value}\n      </Box>\n      {showPopper && (\n        <Popper\n          open={showFullCell && anchorEl !== null}\n          anchorEl={anchorEl}\n          style={{ width, marginLeft: -17 }}\n        >\n          <Paper\n            elevation={3}\n            style={{ minHeight: wrapper.current.offsetHeight - 3 }}\n          >\n            <Typography variant=\"body2\" style={{ padding: 8 }}>\n              {value}\n            </Typography>\n          </Paper>\n        </Popper>\n      )}\n    </Box>\n  );\n});\n\nGridCellExpand.propTypes = {\n  value: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\nexport function renderCellExpand(params) {\n  return (\n    <GridCellExpand value={params.value || ''} width={params.colDef.computedWidth} />\n  );\n}\n\nrenderCellExpand.propTypes = {\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { renderCellExpand } from \"../utils/renderCellExpand\";\n\nconst columns = [\n  {\n    field: \"text\",\n    flex: 0.8,\n    headerName: \"Tweet\",\n    renderCell: renderCellExpand,\n  },\n  { field: \"followers\", flex: 0.2, headerName: \"Followers\" },\n];\n\nconst TopTweets = ({ rows }) => {\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n      />\n    </div>\n  );\n};\n\nexport default TopTweets;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport HelpOutlinedIcon from '@mui/icons-material/HelpOutlined';\n\n\nconst style = {\n  position: 'relative',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '40%',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: 'scroll',\n  height: '50%'\n};\n\nconst GuideModal = (props) => {\n  const {title, message} = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen} sx={{top: \"-5%\"}}>\n        <HelpOutlinedIcon fontSize=\"small\" sx={{color: \"black\"}}/>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            {title}\n          </Typography>\n          <hr></hr>\n          <div id=\"modal-modal-description\" sx={{ mt: 2, whiteSpace: 'pre-line'}}>\n            <br/>\n            {message}\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default GuideModal;\n","import * as React from 'react';\n\nconst keyMetricsMsg = () => {\n  return <div>\n    <img src='/imgs/guides/currentPrice.png' alt=\"Current Price segment view\"/>\n    <p>This segment displays the current price of the selected cryptocurrency \n      and the fluctuation it has under gone in the last week by percentage.</p>\n    <br />\n    <img src=\"/imgs/guides/tweetsSentiment.png\" alt=\"Tweet Sentiment indicator segment view\"/>\n    <p>This segment displays the sentiment indicator (positive/negative/neutral) based on the\n      tweets of the selected time period.</p>\n    <img src=\"/imgs/guides/newsSentiment.png\" alt=\"News Sentiment indicator segment view\"/>\n    <p>This segment displays the sentiment indicator (positive/negative/neutral) based on the\n      news of the selected time period.</p>\n  </div>\n}\n\nconst priceAndSentimentMsg = () => {\n  return <div>\n    <img \n        src=\"/imgs/guides/priceSentiment.png\"\n        alt=\"Price and Sentiment segment view\"/>\n    <p>This segment displays a graph that will show the price fluctuation, the tweet \n      tracked and the news tracked by the APP. The blue line displays the price fluctuation of the\n      selected cryptocurrency price of the selected time period. The green dotted \n      line displays the fluctuation of the Tweets tracked. The red dotted \n      line displays the fluctuation of the News tracked. Positive Tweet and news cause \n      a rise in fluctuation and Negative Tweets and news cause a fall. The APP \n      tracks Tweets and news from the selected time period. This graph compares price to \n      tweet and news predictions.The green bars of the graph indicates a rise in the price \n      and the red bars indicates a fall in the price Prediction can be made on how the price has fluctuated \n      compared to how positive and negative tweets and news about the selected stock or cryptocurrency.</p>\n      <img \n        src=\"/imgs/guides/priceAndSentiments.png\"\n        alt=\"Price and Sentiment segment view highlighting how to select an area to zoom\"/>\n      <p>An area of the graph can be enhanced by clicking on the graph and dragging rectangle over \n        the area that you wish to enhance. This will zoom in on the selected area. See the tool on \n        the top right for the Autoscale button to zoom out</p>\n  </div>;\n};\n\nconst tweeterSectionMsg = () => {\n  return <div>\n    <p>This graph will display the Tweets tracked for the selected time period and selected cryptocurrency.\n      Green dots are positive tweets. Blue dots are neutral Tweets. Red dots are\n      Negative tweets. Hover the mouse over any of the dots to see more information and\n      the tweeted posted.</p>\n      <img \n        src=\"/imgs/guides/tSentiments.png\" \n        alt=\"Tweets Sentiment segment view highlighting how to select an area to zoom\"/>\n      <p>An area of the graph can be enhanced by clicking on the graph and dragging \n        rectangle over the area that you wish to enhance. This will zoom in on the selected area.\n        See the tool on the top right for the Autoscale button to zoom out</p>\n  </div>;\n};\n\n\nconst newsSectionMsg = () => {\n  return <div>\n    <p>This graph will generally display the News tracked for the selected time period and selected cryptocurrency.\n      You can also select any particular publisher from the dropdown box. If any publisher is selected then it'll\n      display only the selected publisher's news for the selected time period and selected cryptocurrency.\n      Green dots are positive news. Blue dots are neutral news. Red dots are\n      Negative news. Hover the mouse over any of the dots to see more information and\n      the news posted.</p>\n      <img \n        src=\"/imgs/guides/newsSentimentGraph.png\"\n        alt=\"News sentiment segment view highlighting how to select an area to zoom\"\n      />\n      <p>An area of the graph can be enhanced by clicking on the graph and dragging \n        rectangle over the area that you wish to enhance. This will zoom in on the selected area.\n        See the tool on the top right for the Autoscale button to zoom out</p>\n      <img \n        src=\"/imgs/guides/newsTable.png\"\n        alt=\"A table containing news article with sentiment indicator\"\n      />\n      <p>This table displays the News title along with publisher and date. The 'sentiment'\n        column of the table tells the sentiment according to the news. The link of the \n        news article is given in the 'link' column.\n      </p>\n  </div>;\n};\n\n\nexport const modalInfo = {\n       productCard:{\n        title: \"Product Card\",\n        message: \"This is a product card containing the name and icon of the product. For more details, click on 'View' and find out what tweets and news articles are saying about the product. If you wish to add this product in your favourites list, press the switch that says 'Add to watchlist'.\"\n       },\n\n       dataSelector : {\n        title: \"Data Selector\",\n        message: \"This option allows you to select a starting and ending date for the cryptocurrency’s tracking period. It displays data in a graph below for the chosen time period. Choose a starting and ending date either by typing the date or clicking the calendar button to select a date. Then click the GET DATA button.\"\n       },\n\n       keyMetrics :{\n        title: \"Key Metrics\",\n        message: keyMetricsMsg()\n       },\n\n       priceAndSentiment: {\n         title: \"Price and Sentiment Correlation\",\n         message: priceAndSentimentMsg()\n       },\n\n       tweeterSection:{\n         title: \"Section for Tweeter Data\",\n         message: tweeterSectionMsg()\n       },\n\n       negativeTweet: {\n        title: \"Negative Tweets\",\n        message: \"This segment displays recent Negative Tweets about cryptocurrencies. Hover the mouse over any of the tweets to see more information and the tweet itself.\"\n       },\n\n       positiveTweet: {\n         title: \"Positive Tweets\",\n         message: \"This segment displays recent Positive Tweets about cryptocurrencies. Hover the mouse over any of the tweets to see more information and the tweet itself.\"\n       },\n\n       newsSection: {\n        title: \"Section for News Data\",\n        message: newsSectionMsg()\n       }\n}\n","import React from \"react\";\nimport TopTweets from \"./TopTweets\";\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport Stack from \"@mui/material/Stack\";\nimport ProductLogo from \"./ProductLogo\";\nimport Plot from \"react-plotly.js\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SectionTitle from \"./SectionTitle\";\nimport GuideModal from \"./Modal\";\nimport { modalInfo } from \"../config\";\n\nconst TwitterSection = ({\n  sentimentData,\n  fromDate,\n  toDate,\n  product,\n  productName,\n  productType,\n  sentimentLoading,\n  layout,\n}) => {\n  const getTopTweets = (data) => {\n    const followers = data[\"customdata\"].map((d) => d[1]);\n    const followersSorted = followers.slice().sort((a, b) => a - b);\n    followersSorted.reverse();\n\n    const topTweets = followersSorted.map((x, id) => {\n      const i = followers.findIndex((y) => y === x);\n      return {\n        id: id,\n        text: data[\"hovertext\"][i],\n        followers: followers[i],\n        polarity: data[\"x\"][i],\n      };\n    });\n\n    return topTweets;\n  };\n  return (\n    <>\n      <Grid item xs={12}>\n        <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n          <Stack sx={{ mb: 2 }} spacing={1} direction=\"row\">\n            <TwitterIcon fontSize=\"large\" />\n             <div>Twitter Section</div>\n             <GuideModal\n              title = {modalInfo.tweeterSection.title}\n              message = {modalInfo.tweeterSection.message}\n             />\n          </Stack>\n        </SectionTitle>\n        <Paper\n          sx={{\n            p: 2,\n            alignItems: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            <Stack direction=\"row\" spacing={1}>\n              <span>Tweets Sentiment on </span>\n              <ProductLogo\n                product={product}\n                productName={productName}\n                productType={productType}\n                size={30}\n              />\n              <span>{` ${productName} from ${fromDate.substring(\n                0,\n                10\n              )} - ${toDate.substring(0, 10)}`}</span>\n            </Stack>\n          </Typography>\n          {sentimentData && !sentimentLoading ? (\n            <Plot\n              data={sentimentData}\n              useResizeHandler={true}\n              layout={{\n                ...layout,\n                margin: {\n                  l: 50,\n                  r: 50,\n                  b: 50,\n                  t: 30,\n                  pad: 4,\n                },\n                autosize: true,\n              }}\n              style={{ width: \"100%\" }}\n            />\n          ) : (\n            <CircularProgress />\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6} lg={6}>\n        <Paper\n          sx={{\n            p: 2,\n            alignItems: \"center\",\n          }}\n        >\n          <SectionTitle typoComponent=\"h2\" variant=\"h5\">\n            <Stack spacing={1} direction=\"row\">\n              <ThumbDownIcon /> \n              <div>Negative Tweets</div>\n              <GuideModal\n              title = {modalInfo.negativeTweet.title}\n              message = {modalInfo.negativeTweet.message}\n              />\n            </Stack>\n          </SectionTitle>\n          {sentimentData && !sentimentLoading ? (\n            <div>\n              <TopTweets\n                rows={\n                  sentimentData.length > 0 ? getTopTweets(sentimentData[2]) : []\n                }\n              />\n            </div>\n          ) : (\n            <Stack\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Stack>\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6} lg={6}>\n        <Paper\n          sx={{\n            p: 2,\n            alignItems: \"center\",\n          }}\n        >\n          <SectionTitle typoComponent=\"h2\" variant=\"h5\">\n            <Stack spacing={1} direction=\"row\">\n              <ThumbUpIcon /> \n              <div>Positive Tweets</div>\n              <GuideModal\n                title = {modalInfo.positiveTweet.title}\n                message = {modalInfo.positiveTweet.message}\n              />\n            </Stack>\n          </SectionTitle>\n          {sentimentData && !sentimentLoading ? (\n            <div>\n              <TopTweets\n                rows={\n                  sentimentData.length > 0 ? getTopTweets(sentimentData[0]) : []\n                }\n              />\n            </div>\n          ) : (\n            <Stack\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Stack>\n          )}\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default TwitterSection;\n","import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { renderCellExpand } from \"../utils/renderCellExpand\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport Chip from \"@mui/material/Chip\";\n\nconst getColor = (sentiment) => {\n  if (sentiment === \"positive\") return \"success\";\n  if (sentiment === \"neutral\") return \"primary\";\n  if (sentiment === \"negative\") return \"error\";\n};\n\nconst columns = [\n  {\n    field: \"title\",\n    flex: 0.5,\n    headerName: \"Title\",\n    renderCell: renderCellExpand,\n  },\n  { field: \"publisher\", flex: 0.2, headerName: \"Publsiher\" },\n  {\n    field: \"sentiment\",\n    flex: 0.1,\n    headerName: \"Sentiment\",\n    renderCell: ({ value }) => {\n      return <Chip label={value} color={getColor(value)} />;\n    },\n  },\n  { field: \"date\", flex: 0.1, headerName: \"Date\" },\n  {\n    field: \"button\",\n    flex: 0.1,\n    headerName: \"Link\",\n    renderCell: () => <LinkIcon />,\n  },\n];\n\nconst NewsTable = ({ rows }) => {\n  const handleOnCellClick = (params, event) => {\n    event.defaultMuiPrevented = true;\n    const { field, row } = params;\n    if (field === \"button\") {\n      window.open(row[\"link\"], \"_blank\");\n    }\n  };\n  return (\n    <div style={{ height: 600, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        onCellClick={handleOnCellClick}\n      />\n    </div>\n  );\n};\n\nexport default NewsTable;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport NewspaperIcon from \"@mui/icons-material/Newspaper\";\nimport Stack from \"@mui/material/Stack\";\nimport ProductLogo from \"./ProductLogo\";\nimport Plot from \"react-plotly.js\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SectionTitle from \"./SectionTitle\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport NewsTable from \"./NewsTable\";\nimport GuideModal from \"./Modal\";\nimport { modalInfo } from \"../config\";\n\nconst NewsSection = ({\n  sentimentData,\n  fromDate,\n  toDate,\n  product,\n  productName,\n  productType,\n  sentimentLoading,\n  layout,\n  publishers,\n}) => {\n  const [selected, setSelected] = useState(\"All Publishers\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  const filterPublisher = (publisher, data) => {\n    const filtered = data.map((d) => {\n      const indices = [];\n      d[\"customdata\"].forEach((e, i) => {\n        if (e[1] === publisher) {\n          indices.push(i);\n        } else if (publisher === \"All Publishers\") {\n          indices.push(i);\n        }\n      });\n      return {\n        ...d,\n        customdata: d[\"customdata\"].filter((e, i) => indices.includes(i)),\n        hovertext: d[\"hovertext\"].filter((e, i) => indices.includes(i)),\n        x: d[\"x\"].filter((e, i) => indices.includes(i)),\n        y: d[\"y\"].filter((e, i) => indices.includes(i)),\n        marker: {\n          ...d[\"marker\"],\n          size: d[\"marker\"].size.filter((e, i) => indices.includes(i)),\n        },\n      };\n    });\n    return filtered;\n  };\n\n  const updateData = (publisher, sentimentData) => {\n    if (!publisher) {\n      setSelected(\"All Publishers\");\n      setFilteredData(sentimentData);\n    } else {\n      setSelected(publisher);\n      const fd = filterPublisher(publisher, sentimentData);\n      setFilteredData(fd);\n    }\n  };\n  const handleOnChange = (e, value) => {\n    updateData(value, sentimentData ? sentimentData : []);\n  };\n\n  useEffect(() => {\n    updateData(selected, sentimentData ? sentimentData : []);\n  }, [sentimentData]);\n\n  const getTableContent = (data) => {\n    const rows = [];\n    let counter = 0;\n    data.forEach((d) => {\n      d[\"customdata\"].forEach((e, i) => {\n        rows.push({\n          publisher: d[\"customdata\"][i][1],\n          title: d[\"hovertext\"][i],\n          id: counter,\n          link: d[\"customdata\"][i][2],\n          date: d[\"customdata\"][i][0].substring(0, 10),\n          sentiment: d[\"name\"],\n        });\n        counter++;\n      });\n    });\n    return rows;\n  };\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n          <Stack sx={{ mb: 2 }} spacing={1} direction=\"row\">\n            <NewspaperIcon fontSize=\"large\" /> \n            <div>News Section</div>\n            <GuideModal\n              title = {modalInfo.newsSection.title}\n              message = {modalInfo.newsSection.message}\n            />\n          </Stack>\n        </SectionTitle>\n        <Stack sx={{ mb: 2 }} spacing={1} direction=\"row\">\n          <Autocomplete\n            disablePortal\n            id=\"publishers\"\n            options={[...publishers, \"All Publishers\"]}\n            sx={{\n              pt: 2,\n              pb: 2,\n              minWidth: \"50%\",\n            }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Publisher\" />\n            )}\n            defaultValue=\"All Publishers\"\n            onChange={handleOnChange}\n          />\n        </Stack>\n        <Paper\n          sx={{\n            p: 2,\n            alignItems: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1 }}\n          >\n            <Stack direction=\"row\" spacing={1}>\n              <span>{selected} News Sentiment on </span>\n              <ProductLogo\n                product={product}\n                productName={productName}\n                size={30}\n                productType={productType}\n              />\n              <span>{` ${productName} from ${fromDate.substring(\n                0,\n                10\n              )} - ${toDate.substring(0, 10)}`}</span>\n            </Stack>\n          </Typography>\n          {sentimentData && !sentimentLoading ? (\n            <Plot\n              data={filteredData}\n              useResizeHandler={true}\n              layout={{\n                ...layout,\n                margin: {\n                  l: 50,\n                  r: 50,\n                  b: 50,\n                  t: 30,\n                  pad: 4,\n                },\n                autosize: true,\n              }}\n              style={{ width: \"100%\" }}\n            />\n          ) : (\n            <CircularProgress />\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={12} lg={12}>\n        <Paper\n          sx={{\n            p: 2,\n            alignItems: \"center\",\n          }}\n        >\n          <SectionTitle typoComponent=\"h2\" variant=\"h5\">\n            <Stack spacing={1} direction=\"row\">\n              News\n            </Stack>\n          </SectionTitle>\n          {sentimentData && !sentimentLoading ? (\n            <NewsTable rows={getTableContent(filteredData)} />\n          ) : (\n            <Stack\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Stack>\n          )}\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default NewsSection;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Plot from \"react-plotly.js\";\nimport { AuthContext } from \"../Auth.js\";\nimport { Redirect } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport DateSelector from \"../components/DateSelector\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Layout from \"../components/Layout\";\nimport AnalyticsIcon from \"@mui/icons-material/Analytics\";\nimport MessageBar from \"../components/MessageBar\";\nimport Metrics from \"../components/Metrics\";\nimport ProductLogo from \"../components/ProductLogo\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport NewspaperIcon from \"@mui/icons-material/Newspaper\";\nimport TwitterSection from \"../components/TwitterSection\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport NewsSection from \"../components/NewsSection\";\nimport GuideModal from \"../components/Modal\";\nimport { modalInfo } from \"../config\";\n\nconst Product = ({ productList, productType }) => {\n  const [metrics, setMetrics] = useState({});\n  const [metricsLoading, setMetricsLoading] = useState(false);\n\n  const [priceData, setPriceData] = useState({});\n  const [priceLoading, setPriceLoading] = useState(false);\n\n  const [sentimentData, setSentimentData] = useState({});\n  const [sentimentLoading, setSentimentLoading] = useState(false);\n  const [filteredSentimentData, setFilteredSentimentData] = useState(null);\n\n  const [newsData, setNewsData] = useState({});\n  const [newsLoading, setNewsLoading] = useState(false);\n  const [filteredNewsData, setFilteredNewsData] = useState(null);\n  const [publishers, setPublishers] = useState(null);\n\n  const d = new Date();\n  d.setHours(22);\n  const [endDate, setEndDate] = useState(d.toISOString().substring(0, 10));\n  d.setMonth(d.getMonth() - 1);\n  const [startDate, setStartDate] = useState(d.toISOString().substring(0, 10));\n  const [fromDate, setFromDate] = useState(startDate);\n  const [toDate, setToDate] = useState(endDate);\n  const maxDate = new Date(endDate);\n  maxDate.setDate(maxDate.getDate() - 7);\n\n  const [messageBarOpen, setMessageBarOpen] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n\n  const { id: product } = useParams();\n\n  if (!currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  const products = Object.keys(productList);\n  if (products.findIndex((p) => p === product) < 0) {\n    return <Redirect to=\"/error\" />;\n  }\n  const productName = productList[product].fullName;\n\n  const getSplicedData = (data, fd, td) => {\n    const indices = [];\n    data.forEach((d) => {\n      const idx = [];\n\n      idx.push(d[\"customdata\"].findIndex((x) => x[0] >= fd && x[0] <= td));\n      idx.push(d[\"customdata\"].findLastIndex((x) => x[0] >= fd && x[0] <= td));\n      indices.push(idx);\n    });\n\n    const splicedData = data.map((d, i) => ({\n      ...d,\n      customdata: d[\"customdata\"].slice(indices[i][0], indices[i][1]),\n      hovertext: d[\"hovertext\"].slice(indices[i][0], indices[i][1]),\n      x: d[\"x\"].slice(indices[i][0], indices[i][1]),\n      y: d[\"y\"].slice(indices[i][0], indices[i][1]),\n      marker: {\n        ...d[\"marker\"],\n        size: d[\"marker\"].size.slice(indices[i][0], indices[i][1]),\n      },\n    }));\n\n    return splicedData;\n  };\n\n  const handleRelayout = (e) => {\n    let fd = fromDate;\n    let td = toDate;\n\n    if (e[\"xaxis.range[0]\"] && e[\"xaxis.range[1]\"]) {\n      fd = e[\"xaxis.range[0]\"];\n      td = e[\"xaxis.range[1]\"];\n      setMessage(`${fd.substring(0, 10)} to ${td.substring(0, 10)} selected`);\n      setMessageBarOpen(true);\n    }\n\n    if (e[\"xaxis.autorange\"] || e[\"yaxis.autorange\"]) {\n      fd = priceData.layout.xaxis.range[0];\n      td = priceData.layout.xaxis.range[1];\n      setMessage(`${fd.substring(0, 10)} to ${td.substring(0, 10)} selected`);\n      setMessageBarOpen(true);\n    }\n\n    setFromDate(fd);\n    setToDate(td);\n\n    if (sentimentData.data && !sentimentLoading) {\n      setFilteredSentimentData(getSplicedData(sentimentData.data, fd, td));\n    }\n\n    if (newsData.data && !newsLoading) {\n      setFilteredNewsData(getSplicedData(newsData.data, fd, td));\n    }\n  };\n\n  const getData = () => {\n    currentUser.getIdToken().then((token) => {\n      const headers = {\n        authorization: token,\n      };\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n\n      if (start > maxDate) {\n        alert(\"Please select a valid date range\");\n        return;\n      }\n      start.setHours(22);\n      end.setHours(22);\n\n      const startString = start.toISOString().substring(0, 10);\n      const endString = end.toISOString().substring(0, 10);\n\n      setPriceLoading(true);\n      setSentimentLoading(true);\n      setNewsLoading(true);\n      setMetricsLoading(true);\n\n      fetch(\n        `/api/price_viz?product=${product}&productType=${productType}&start=${startString}&end=${endString}`,\n        {\n          headers: headers,\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) throw data.error;\n          setPriceData(data);\n          const dates = data.data[0].x;\n          setStartDate(dates[0]);\n          setEndDate(dates[dates.length - 1]);\n          setFromDate(dates[0]);\n          setToDate(dates[dates.length - 1]);\n        })\n        .catch((e) => {\n          alert(e);\n          setPriceData({ data: [], layout: {} });\n        })\n        .finally(() => {\n          setPriceLoading(false);\n        });\n\n      fetch(\n        `/api/tweets_sentiment?product=${product}&productType=${productType}&start=${startString}&end=${endString}`,\n        {\n          headers: headers,\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) throw data.error;\n          setSentimentData(data);\n        })\n        .catch((e) => {\n          alert(e);\n          setSentimentData({ data: [], layout: {} });\n        })\n        .finally(() => {\n          setSentimentLoading(false);\n        });\n\n      fetch(\n        `/api/news_sentiment?product=${product}&productType=${productType}&start=${startString}&end=${endString}`,\n        {\n          headers: headers,\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) throw data.error;\n          const { fig, publishers } = data;\n          setNewsData(fig);\n          setFilteredNewsData(fig.data);\n          setPublishers(publishers);\n        })\n        .catch((e) => {\n          alert(e);\n          setNewsData({ data: [], layout: {} });\n          setPublishers([]);\n        })\n        .finally(() => {\n          setNewsLoading(false);\n        });\n\n      fetch(`/api/metrics?product=${product}&productType=${productType}`, {\n        headers: headers,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) throw data.error;\n          setMetrics(data);\n        })\n        .catch((e) => {\n          alert(e);\n        })\n        .finally(() => {\n          setMetricsLoading(false);\n        });\n    });\n  };\n\n  const metricsProps = (title, data) => {\n    let currentValue = \"-\";\n    let percentage = \"-\";\n    if (data) {\n      if (data.currentValue) {\n        currentValue = data.currentValue;\n        percentage = data.percentage;\n      }\n    }\n    return {\n      title,\n      value: currentValue,\n      percentage,\n      arrowIcon:\n        parseFloat(percentage) > 0 ? (\n          <ArrowUpwardIcon color=\"success\" />\n        ) : (\n          <ArrowDownwardIcon color=\"error\" />\n        ),\n    };\n  };\n\n  const sentimentCategory = (value) => {\n    if (value) {\n      if (value < -0.33) {\n        return `Negative (${value})`;\n      } else if (value >= -0.33 && value <= 0.33) {\n        return `Neutral (${value})`;\n      } else if (value > 0.33) {\n        return `Positive (${value})`;\n      }\n    }\n\n    return \"-\";\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const Title = () => {\n    return (\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        sx={{ flexGrow: 1 }}\n      >\n        <Stack direction=\"row\" spacing={1}>\n          <ProductLogo\n            product={product}\n            productName={productName}\n            productType={productType}\n            size={30}\n          />\n          <span>{productName} Dashboard</span>\n        </Stack>\n      </Typography>\n    );\n  };\n  return (\n    <Layout title={<Title />}>\n      <Stack sx={{ mb: 2 }} spacing={1} direction=\"row\">\n        <DateSelector\n          label=\"Start\"\n          setValue={setStartDate}\n          value={startDate}\n          maxDate={maxDate}\n        />\n        <DateSelector label=\"End\" setValue={setEndDate} value={endDate} />\n        <Button onClick={getData} size=\"large\" variant=\"contained\">\n          Get Data\n        </Button>\n        <GuideModal\n          title={modalInfo.dataSelector.title}\n          message={modalInfo.dataSelector.message}\n        />\n      </Stack>\n      <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n        <Stack sx={{ mb: 2 }} spacing={1} direction=\"row\">\n          <AnalyticsIcon fontSize=\"large\" />\n          <div> Key Metrics</div>\n          <GuideModal\n            title={modalInfo.keyMetrics.title}\n            message={modalInfo.keyMetrics.message}\n          />\n        </Stack>\n      </SectionTitle>\n      <Grid container spacing={3}>\n        {/* Metrics */}\n        <Grid item xs={12} md={4} lg={4}>\n          {!metricsLoading ? (\n            <Metrics\n              {...metricsProps(\"Current Price\", metrics.prices)}\n              value={metrics.prices ? `$ ${metrics.prices.currentValue}` : \"-\"}\n              icon={<AttachMoneyIcon fontSize=\"large\" />}\n            />\n          ) : (\n            <Paper\n              sx={{\n                p: 2,\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Paper>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} lg={4}>\n          {!metricsLoading ? (\n            <Metrics\n              {...metricsProps(\"Tweets Sentiment\", metrics.tweets)}\n              value={\n                metrics.tweets\n                  ? sentimentCategory(metrics.tweets.currentValue)\n                  : \"-\"\n              }\n              icon={<TwitterIcon fontSize=\"large\" />}\n            />\n          ) : (\n            <Paper\n              sx={{\n                p: 2,\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Paper>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} lg={4}>\n          {!metricsLoading ? (\n            <Metrics\n              {...metricsProps(\"News Sentiment\", metrics.news)}\n              value={\n                metrics.news\n                  ? sentimentCategory(metrics.news.currentValue)\n                  : \"-\"\n              }\n              icon={<NewspaperIcon fontSize=\"large\" />}\n            />\n          ) : (\n            <Paper\n              sx={{\n                p: 2,\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <CircularProgress />\n            </Paper>\n          )}\n        </Grid>\n        {/* Price and Sentiments Plot */}\n        <Grid item xs={12}>\n          <Grid item xs={12}>\n            <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n              <Stack direction=\"row\" spacing={1}>\n                <ProductLogo\n                  product={product}\n                  productName={productName}\n                  productType={productType}\n                  size={36}\n                />\n                <span>{productName} Price & Sentiments</span>\n                <GuideModal\n                  title={modalInfo.priceAndSentiment.title}\n                  message={modalInfo.priceAndSentiment.message}\n                />\n              </Stack>\n            </SectionTitle>\n          </Grid>\n          <br />\n          <Paper\n            sx={{\n              p: 2,\n              alignItems: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Typography\n              component=\"h2\"\n              variant=\"h5\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              <Stack direction=\"row\" spacing={1}>\n                <ProductLogo\n                  product={product}\n                  productName={productName}\n                  productType={productType}\n                  size={30}\n                />\n                <span>{` ${productName} Price & Daily Average Sentiments from ${fromDate.substring(\n                  0,\n                  10\n                )} - ${toDate.substring(0, 10)}`}</span>\n              </Stack>\n            </Typography>\n            {priceData.data && !priceLoading ? (\n              <Plot\n                data={priceData.data}\n                useResizeHandler={true}\n                layout={{\n                  ...priceData.layout,\n                  margin: {\n                    l: 50,\n                    r: 50,\n                    b: 50,\n                    t: 30,\n                    pad: 4,\n                  },\n                  autosize: true,\n                }}\n                style={{ width: \"100%\" }}\n                onRelayout={handleRelayout}\n              />\n            ) : (\n              <CircularProgress />\n            )}\n          </Paper>\n        </Grid>\n        {/* Twitter Section */}\n        <TwitterSection\n          sentimentData={\n            filteredSentimentData ? filteredSentimentData : sentimentData.data\n          }\n          layout={sentimentData.layout}\n          filteredSentimentData={filteredSentimentData}\n          fromDate={fromDate}\n          toDate={toDate}\n          product={product}\n          productName={productName}\n          productType={productType}\n          sentimentLoading={sentimentLoading}\n        />\n        <NewsSection\n          sentimentData={filteredNewsData ? filteredNewsData : newsData.data}\n          layout={newsData.layout}\n          fromDate={fromDate}\n          toDate={toDate}\n          product={product}\n          productName={productName}\n          productType={productType}\n          sentimentLoading={newsLoading}\n          publishers={publishers ? publishers : []}\n        />\n      </Grid>\n      <MessageBar\n        open={messageBarOpen}\n        setOpen={setMessageBarOpen}\n        message={message}\n      />\n    </Layout>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { cryptoList } from \"../constants\";\nimport Product from \"../components/Product\";\n\nconst CryptoDashboard = () => {\n  return <Product productList={cryptoList} productType={\"cryptos\"} />;\n};\n\nexport default CryptoDashboard;\n","import React from \"react\";\nimport { stockList } from \"../constants\";\nimport ProductGrid from \"../components/ProductGrid\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport LayoutTitle from \"../components/LayoutTitle\";\nimport Layout from \"../components/Layout\";\n\nconst StockList = () => {\n  return (\n    <Layout title={<LayoutTitle text=\"Stocks\" />}>\n      <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n        <div>Stocks</div>\n      </SectionTitle>\n      <ProductGrid\n        productType=\"stocks\"\n        productList={stockList}\n        showAll={true}\n      />\n    </Layout>\n  );\n};\n\nexport default StockList;\n","import React from \"react\";\nimport { stockList } from \"../constants\";\nimport Product from \"../components/Product\";\n\nconst StockDashboard = () => {\n  return <Product productList={stockList} productType=\"stocks\" />;\n};\n\nexport default StockDashboard;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\nimport Container from \"@mui/material/Container\";\nimport Copyright from \"../components/Copyright\";\nimport { Stack } from \"@mui/material\";\nimport Logo from \"../components/Logo\";\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <GlobalStyles\n        styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\n      />\n      <CssBaseline />\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}` }}\n      >\n        <Toolbar sx={{ flexWrap: \"wrap\" }}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\n            Money Mood\n          </Typography>\n          <nav>\n            <Link\n              variant=\"button\"\n              color=\"text.primary\"\n              href=\"#\"\n              sx={{ my: 1, mx: 1.5 }}\n            >\n              Features\n            </Link>\n          </nav>\n          <Button href=\"/login\" variant=\"outlined\" sx={{ my: 1, mx: 1.5 }}>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {/* Hero unit */}\n      <Container\n        disableGutters\n        maxWidth=\"sm\"\n        component=\"main\"\n        sx={{ pt: 8, pb: 6 }}\n      >\n        <Logo width=\"100%\" />\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n        >\n          Money Mood\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          Money Mood is a tool for investors to analyse sentiments around stocks\n          and cryptocurrencies from sources such as Twitter and news articles.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container padding={1} alignItems=\"center\" justifyContent=\"center\">\n          <Stack spacing={2} direction=\"row\">\n            <Button href=\"/signup\" variant=\"contained\" size=\"large\">\n              Sign Up\n            </Button>\n            <Button href=\"/login\" variant=\"outlined\" size=\"large\">\n              Login\n            </Button>\n          </Stack>\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React, { useState, useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\nimport app from \"../base.js\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Copyright from \"../components/Copyright\";\nimport Logo from \"../components/Logo\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport { Stack } from \"@mui/material\";\n\nconst theme = createTheme();\n\nconst ForgetPassword = ({ history }) => {\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleForgetPassword = useCallback(\n    async (event) => {\n      event.preventDefault();\n      const { email } = event.target.elements;\n\n      app\n        .auth()\n        .sendPasswordResetEmail(email.value)\n        .then(() => {\n          setShowSuccess(true);\n          setError(false);\n          setErrorMessage(\"\");\n        })\n        .catch((error) => {\n          setError(true);\n          setErrorMessage(error.message);\n          setShowSuccess(false);\n        });\n    },\n    [history]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Logo width=\"100%\" />\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Stack\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n            spacing={3}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              Forgot your password?\n            </Typography>\n            <Typography variant=\"p\">\n              Provide your email address here. We will send you a link to reset\n              your password.\n            </Typography>\n          </Stack>\n\n          <Box\n            component=\"form\"\n            onSubmit={handleForgetPassword}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              error={error}\n              helperText={errorMessage}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Submit\n            </Button>\n            {showSuccess ? (\n              <Typography color=\"green\" variant=\"p\">\n                <i>\n                  A reset email with a link has been sent. Follow the link to\n                  reset your password.\n                </i>\n              </Typography>\n            ) : (\n              \"\"\n            )}\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Back to Login\n              </Link>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default withRouter(ForgetPassword);\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { cryptoList, stockList } from \"../constants\";\nimport ProductGrid from \"../components/ProductGrid\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport LayoutTitle from \"../components/LayoutTitle\";\n\nconst WatchList = () => {\n  return (\n    <Layout title={<LayoutTitle text=\"Watchlist\" />}>\n      <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n        <div>Stocks</div>\n      </SectionTitle>\n      <ProductGrid productType=\"stocks\" productList={stockList} />\n\n      <SectionTitle typoComponent=\"h1\" variant=\"h4\">\n        <div>CryptoCurrencies</div>\n      </SectionTitle>\n      <ProductGrid productType=\"cryptos\" productList={cryptoList} />\n    </Layout>\n  );\n};\n\nexport default WatchList;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport { AuthProvider } from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Page404 from \"./pages/Page404\";\nimport CryptoList from \"./pages/CryptoList\";\nimport CryptoDashboard from \"./pages/CryptoDashboard\";\nimport StockList from \"./pages/StockList\";\nimport StockDashboard from \"./pages/StockDashboard\";\nimport Home from \"./pages/Home\";\nimport ForgetPassword from \"./pages/ForgetPassword\";\nimport WatchList from \"./pages/WatchList\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/cryptos/:id\" component={CryptoDashboard} />\n          <PrivateRoute exact path=\"/cryptos\" component={CryptoList} />\n          <PrivateRoute exact path=\"/stocks/:id\" component={StockDashboard} />\n          <PrivateRoute exact path=\"/stocks\" component={StockList} />\n          <PrivateRoute exact path=\"/watchlist\" component={WatchList} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/forget\" component={ForgetPassword} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}